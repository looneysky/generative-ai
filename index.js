const fetch = require('node-fetch');
const axios = require('axios');
const fs = require('fs');
const path = require('path');
const crypto = require('crypto'); // –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
const WebSocket = require('ws');
const { v4: uuidv4 } = require('uuid');
const translatte = require('translatte');
const sharp = require('sharp');
const webhook = require('./modules/webhookModule'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∞—à –º–æ–¥—É–ª—å
const { saveUsers, loadUsers, models } = require('./modules/baseModule');
const { secret, token, runwareApi, runwareApi2 } = require('./modules/configModule');
const bot = require('./modules/botModule');
const { getTimeUntilReset } = require('./modules/timeModule');
const { containsForbiddenWords } = require('./modules/forbiddenWords');

let prompts = {}; // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º

async function addBlurAndPremiumText(imageUrl) {
    try {
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        const randomFileName = `${uuidv4()}.jpg`;
        const outputPath = path.join(__dirname, 'uploads', randomFileName);

        // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å URL
        const response = await fetch(imageUrl);
        const buffer = await response.buffer();

        // –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º "PREMIUM"
        const textImageBuffer = await sharp({
            create: {
                width: 700, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –¥–ª—è –±–æ–ª–µ–µ –∫—Ä—É–ø–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                height: 150, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
                channels: 4,
                background: { r: 0, g: 0, b: 0, alpha: 0 }
            }
        })
            .png()
            .composite([{
                input: Buffer.from(`
                    <svg width="700" height="150">
                        <text x="50%" y="50%" font-size="100" fill="#FFD700" text-anchor="middle" alignment-baseline="middle" font-family="Arial" font-weight="bold">PREMIUM</text>
                    </svg>
                `),
                gravity: 'center'
            }])
            .toBuffer();

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º—ã—Ç–∏—è –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        await sharp(buffer)
            .blur(20) // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º—ã—Ç–∏—è
            .composite([{
                input: textImageBuffer,
                gravity: 'center' // –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É
            }])
            .toFile(outputPath); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ñ–∞–π–ª

        console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å –±–ª—é—Ä–æ–º –∏ —Ç–µ–∫—Å—Ç–æ–º PREMIUM:', outputPath);
        return outputPath; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
    }
}

async function isUserSubscribed(chatId, channelUsername) {
    try {
        const member = await bot.getChatMember(channelUsername, chatId);
        return member.status === 'member' || member.status === 'administrator';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
        return false;
    }
}

async function generateImageWithBackup(prompt) {
    const url = 'https://aiimagegenerator.io/api/model/predict-peach';

    const data = {
        prompt: prompt,
        negativePrompt: "",
        key: "Cinematic",
        width: 1024,
        height: 1024,
        quantity: 1,
        size: "1024x1024"
    };

    const headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json, text/plain, */*',
        'Origin': 'https://aiimagegenerator.io',
        'Referer': 'https://aiimagegenerator.io/',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36 Edg/129.0.0.0'
    };

    try {
        const response = await axios.post(url, data, { headers });

        if (response.status === 200 && response.data.code === 0) {
            const imageUrl = response.data.data.url;
            console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:', imageUrl);
            return imageUrl;
        } else {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ' + response.data.message);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
        throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ createImage
    }
}

async function verifyUser() {
    const verifyUrl = `https://image-generation.perchance.org/api/verifyUser?thread=2&__cacheBust=${Math.random()}`;
    
    try {
        const response = await axios.get(verifyUrl);
        console.log('–û—Ç–≤–µ—Ç –æ—Ç API –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:', response.data);

        if (response.data.status === 'success' && response.data.userKey) {
            return response.data.userKey;
        } else if (response.data.status === 'already_verified') {
            return response.data.userKey;
        } else {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å userKey –∏–∑ –æ—Ç–≤–µ—Ç–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
        throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ createImage
    }
}

async function createImage(prompt, userId) {
    const maxRetries = 3;
    let attempt = 0;

    try {
        const userKey = await verifyUser();

        const connectAndGenerateImage = async () => {
            console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
            const requestUrl = `https://image-generation.perchance.org/api/generate?prompt=${encodeURIComponent(prompt)}&seed=-1&resolution=1024x1024&guidanceScale=7&negativePrompt=${encodeURIComponent("low quality, deformed, blurry, bad art, drawing, painting, horrible resolutions, low DPI, low PPI, blurry, glitch, error")}&channel=image-generator-professional&subChannel=public&userKey=${userKey}&requestId=0.3375448669220542&__cacheBust=${Math.random()}`;
            
            const response = await axios.get(requestUrl);
            console.log('–û—Ç–≤–µ—Ç –æ—Ç API:', response.data);

            if (response.data.status === 'success' && response.data.imageId) {
                const imageUrl = `https://image-generation.perchance.org/api/downloadTemporaryImage?imageId=${response.data.imageId}`;
                console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ. URL:', imageUrl);
                return imageUrl;
            } else {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å imageId –∏–∑ –æ—Ç–≤–µ—Ç–∞');
            }
        };

        while (attempt < maxRetries) {
            try {
                return await connectAndGenerateImage();
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ ${attempt + 1}:`, error.message);
                attempt++;
                if (attempt >= maxRetries) {
                    console.error('–ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
                    return await generateImageWithBackup(prompt); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥
                }
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error.message);
        // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å—Ä–∞–∑—É, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞
        return await generateImageWithBackup(prompt);
    }
}


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
    if (msg.chat.type == 'group' || msg.chat.type == 'supergroup') {
        return;
    } else {
        bot.sendMessage(msg.chat.id, 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫.\n\nüñºÔ∏è –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–µ–∫—É–Ω–¥—ã!‚ú®');
    }
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
bot.on('message', async (msg) => {
    if (msg.text && !msg.text.startsWith('/')) {
        const chatId = msg.chat.id;
        const userId = msg.from.id;
        const users = loadUsers();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
        if (msg.chat.type == 'group' || msg.chat.type == 'supergroup') {
            return;
        }

        if (!users[userId]) {
            // –ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            users[userId] = {
                attemps: 0,
                premium: {
                    isPremium: false,
                    expire: null
                },
                model: "Premium V1" // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é Free V1
            };

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            saveUsers(users);
            console.log('New user');
        }

        let translatedText;
        await translatte(msg.text, { to: 'en' }).then(res => {
            translatedText = res.text;
            console.log('–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: ', translatedText);

        }).catch(err => {
            console.error(err);
        });

        if (users[userId].premium.isPremium === false) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
            if (users[userId].attemps >= 3) {
                bot.sendMessage(userId, '–í–∞—à –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –∏—Å—á–µ—Ä–ø–∞–Ω.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ' + getTimeUntilReset() + ' –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –¥–æ –ø—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏–∏ –¥–ª—è –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.', {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                { text: 'üîÑ –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å', callback_data: 'change_model' },
                                { text: 'üí≥ –ö—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º', callback_data: 'buy_premium' }
                            ]
                        ]
                    }
                });
                return;
            } else {
                if (containsForbiddenWords(translatedText) === true) {
                    bot.sendMessage(userId, 'üòµ –ò—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –º–æ–∂–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç 18+ —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ.', {
                        reply_markup: {
                            inline_keyboard: [
                                [
                                    { text: 'üîÑ –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å', callback_data: 'change_model' },
                                    { text: 'üí≥ –ö—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º', callback_data: 'buy_premium' }
                                ]
                            ]
                        }
                    })
                    return;
                }
                // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
                users[userId].attemps += 1;
                saveUsers(users);
            }
        }

        /*const groupId = '-1002200640088'; // ID –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å

        try {
            const chatMember = await bot.getChatMember(groupId, userId)

            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≥—Ä—É–ø–ø–µ
            if (chatMember.status === 'left' || chatMember.status === 'kicked' || chatMember.status === 'restricted') {
                bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç—É–ø–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å: https://t.me/+-FXl0TbqBPZiN2Yy');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥—Ä—É–ø–ø—ã:', error);
            bot.sendMessage(chatId, '–ü–æ—Ö–æ–∂–µ, –≤—ã –µ—â–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç—É–ø–∏—Ç–µ: https://t.me/+-FXl0TbqBPZiN2Yy');
        }*/

        console.log(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${msg.text}`);

        const channelUsername = "@photoai_channel"

        const subscribed = await isUserSubscribed(chatId, channelUsername);
        if (!subscribed) {
            await bot.sendMessage(chatId, `‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ${channelUsername}, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.`);
            return;
        }

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        const processingMsg = await bot.sendMessage(chatId, `üõ†Ô∏è –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É:\n\n"${msg.text}"\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...`);

        try {
            console.log('–ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é createImage...');

            const promptIndex = uuidv4(); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
            prompts[promptIndex] = translatedText; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –æ–±—ä–µ–∫—Ç prompts

            const imageUrl = await createImage(translatedText, userId);
            console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ:', imageUrl);

            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            const randomFileName = crypto.randomBytes(16).toString('hex') + '.jpg';
            const filePath = path.join(__dirname, randomFileName);

            // –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            const response = await axios({
                url: imageUrl,
                responseType: 'stream', // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ –ø–æ—Ç–æ–∫
            });

            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –¥–∏—Å–∫
            const writer = fs.createWriteStream(filePath);
            response.data.pipe(writer);

            // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞
            await new Promise((resolve, reject) => {
                writer.on('finish', resolve);
                writer.on('error', reject);
            });

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –≤ —á–∞—Ç
            await bot.sendPhoto(chatId, filePath, {
                caption: `üéâ –í–æ—Ç –≤–∞—à–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É:\n\n"${msg.text}"\n\nüí¨ –ù–∞—à —á–∞—Ç: https://t.me/+-FXl0TbqBPZiN2Yy\nüëâ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.`,
                reply_markup: {
                    inline_keyboard: [[
                        {
                            text: 'üñåÔ∏è –†–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
                            callback_data: `regenerate:${promptIndex}`,
                        },
                        { text: 'üîÑ –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å', callback_data: 'change_model' },
                    ],
                    [
                        {
                            text: '‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å',
                            url: imageUrl,
                        }
                    ]],
                },
            });

            // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            fs.unlinkSync(filePath);
            console.log(`–§–∞–π–ª ${randomFileName} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏`);
        } catch (error) {
            if (error.response && error.response.body && error.response.body.error_code === 429) {
                // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ retry-after
                const retryAfter = error.response.body.parameters.retry_after;
                console.error(`–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ ${retryAfter} —Å–µ–∫—É–Ω–¥.`);
                setTimeout(async () => {
                    await bot.sendMessage(chatId, '‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
                }, retryAfter * 1000); // –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            } else {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
                await bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        console.log('–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...');
        bot.deleteMessage(chatId, processingMsg.message_id);
        bot.deleteMessage(chatId, msg.message_id);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏ –∏ –¥—Ä—É–≥–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const userId = query.from.id;
    const users = loadUsers();

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏
    if (query.data === 'change_model') {
        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
        await bot.sendMessage(userId, '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:', {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'FastFlux V1', callback_data: 'set_free_v1' }],
                    [{ text: 'Premium V1', callback_data: 'set_premium_v1' }],
                    [{ text: 'Premium V2', callback_data: 'set_premium_v2' }]
                ]
            }
        });
    } else if (query.data === 'set_premium_v1') {
        if (!users[userId]) {
            // Initialize the user object if it doesn't exist
            users[userId] = {
                attempts: 0,
                premium: {
                    isPremium: false,
                    expire: null
                },
                model: "Free V1" // Default model
            };
        }
        users[userId].model = "Premium V1";
        saveUsers(users);
        await bot.sendMessage(userId, `‚úÖ –ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "Premium V1"`);
    } else if (query.data === 'set_free_v1') {
        if (!users[userId]) {
            // Initialize the user object if it doesn't exist
            users[userId] = {
                attempts: 0,
                premium: {
                    isPremium: false,
                    expire: null
                },
                model: "Free V1" // Default model
            };
        }
        users[userId].model = "Free V1";
        saveUsers(users);
        await bot.sendMessage(userId, `‚úÖ –ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "FastFlux V1"`);
    } else if (query.data === 'set_premium_v2') {
        if (!users[userId]) {
            // Initialize the user object if it doesn't exist
            users[userId] = {
                attempts: 0,
                premium: {
                    isPremium: false,
                    expire: null
                },
                model: "Free V1" // Default model
            };
        }
        users[userId].model = "Premium V2";
        saveUsers(users);
        await bot.sendMessage(userId, `‚úÖ –ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "Premium V2"`);
    } else if (query.data === 'buy_premium') {
        const options = {
            reply_markup: JSON.stringify({
                inline_keyboard: [
                    [{ text: '1 –º–µ—Å—è—Ü - 199 —Ä—É–±–ª–µ–π', callback_data: 'premium_1_month' }],
                    [{ text: '6 –º–µ—Å—è—Ü–µ–≤ - 399 —Ä—É–±–ª–µ–π', callback_data: 'premium_6_months' }],
                    [{ text: '1 –≥–æ–¥ - 899 —Ä—É–±–ª–µ–π', callback_data: 'premium_1_year' }]
                ]
            })
        };

        await bot.sendMessage(userId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏:', options);
    }

    // –î–∞–ª–µ–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞
    else if (query.data === 'premium_1_month') {
        await bot.sendMessage(userId, '–î–ª—è –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ 199—Ä –Ω–∞ –∫–∞—Ä—Ç—É: 4048 4150 1147 9926\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø–ª–∞—Ç—ã –æ–±—Ä–∞—â–∞—Ç—å—Å—è: @webadmin11');
    } else if (query.data === 'premium_6_months') {
        await bot.sendMessage(userId, '–î–ª—è –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ 399—Ä –Ω–∞ –∫–∞—Ä—Ç—É: 4048 4150 1147 9926\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø–ª–∞—Ç—ã –æ–±—Ä–∞—â–∞—Ç—å—Å—è: @webadmin11');
    } else if (query.data === 'premium_1_year') {
        await bot.sendMessage(userId, '–î–ª—è –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ 899—Ä –Ω–∞ –∫–∞—Ä—Ç—É: 4048 4150 1147 9926\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø–ª–∞—Ç—ã –æ–±—Ä–∞—â–∞—Ç—å—Å—è: @webadmin11');
    } else {
        // –î—Ä—É–≥–∏–µ callback-–∑–∞–ø—Ä–æ—Å—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const promptIndex = query.data.split(':')[1];
        if (!prompts[promptIndex]) {
            await bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.');
            return;
        }

        const prompt = prompts[promptIndex];
        console.log(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –ø—Ä–æ–º—Ç—É: ${prompt}`);

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        const processingMsg = await bot.sendMessage(chatId, `üîÑ –†–µ–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É:\n\n"${prompt}"\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...`);

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å
            const selectedModel = users[userId].model; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'Free V1', –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞

            if (selectedModel != 'Free V1') {
                if (users[userId].premium.isPremium === false) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
                    if (users[userId].attemps >= 3) {
                        bot.sendMessage(userId, '–í–∞—à –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –∏—Å—á–µ—Ä–ø–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ —á–∞—Å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –¥–æ –ø—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏–∏ –¥–ª—è –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.', {
                            reply_markup: {
                                inline_keyboard: [
                                    [
                                        { text: 'üîÑ –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å', callback_data: 'change_model' },
                                        { text: 'üí≥ –ö—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º', callback_data: 'buy_premium' }
                                    ]
                                ]
                            }
                        });
                        return;
                    } else {
                        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
                        users[userId].attemps += 1;
                        saveUsers(users);
                    }
                }
            }
            const imageUrl = await createImage(prompt, userId);
            console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ:', imageUrl);

            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            const randomFileName = crypto.randomBytes(16).toString('hex') + '.jpg';
            const filePath = path.join(__dirname, randomFileName);

            // –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            const response = await axios({
                url: imageUrl,
                responseType: 'stream', // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ –ø–æ—Ç–æ–∫
            });

            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –¥–∏—Å–∫
            const writer = fs.createWriteStream(filePath);
            response.data.pipe(writer);

            // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞
            await new Promise((resolve, reject) => {
                writer.on('finish', resolve);
                writer.on('error', reject);
            });

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –≤ —á–∞—Ç
            await bot.sendPhoto(chatId, filePath, {
                caption: `üéâ –í–æ—Ç –≤–∞—à–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É:\n\n"${prompt}"\n\nüí¨ –ù–∞—à —á–∞—Ç: https://t.me/+ZWOwCCIIhBdkODQy\nüëâ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.`,
                reply_markup: {
                    inline_keyboard: [[
                        {
                            text: 'üñåÔ∏è –†–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
                            callback_data: `regenerate:${promptIndex}`,
                        },
                        { text: 'üîÑ –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å', callback_data: 'change_model' },
                    ],
                    [
                        {
                            text: '‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å',
                            url: imageUrl,
                        }
                    ]],
                },
            });

            // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            fs.unlinkSync(filePath);
            console.log(`–§–∞–π–ª ${randomFileName} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏`);

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
            await bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        console.log('–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...');
        bot.deleteMessage(chatId, processingMsg.message_id);
    }
});